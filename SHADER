game.StarterGui:SetCore("SendNotification", {
    Title = "Create by HAPPY script";
    Text = "Loading shader, pls wait 15s-30s ✨";
    Duration = 17;
})

-- Tạo GUI Loading
local ScreenGui = Instance.new("ScreenGui")
local LoadingFrame = Instance.new("Frame")
local LoadingBar = Instance.new("Frame")
local LoadingText = Instance.new("TextLabel")

-- Thuộc tính của ScreenGui
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.Name = "LoadingGUI"

-- Thuộc tính của LoadingFrame (thanh nền)
LoadingFrame.Name = "LoadingFrame"
LoadingFrame.Parent = ScreenGui
LoadingFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
LoadingFrame.Size = UDim2.new(0.8, 0, 0.05, 0)
LoadingFrame.Position = UDim2.new(0.1, 0, -0.1, 0) -- Ban đầu nằm ngoài màn hình
LoadingFrame.BorderSizePixel = 0

-- Thuộc tính của LoadingBar (thanh tiến trình)
LoadingBar.Name = "LoadingBar"
LoadingBar.Parent = LoadingFrame
LoadingBar.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
LoadingBar.Size = UDim2.new(0, 0, 1, 0) -- Ban đầu thanh trống
LoadingBar.BorderSizePixel = 0

-- Thuộc tính của LoadingText (% hiển thị)
LoadingText.Name = "LoadingText"
LoadingText.Parent = ScreenGui
LoadingText.BackgroundTransparency = 1
LoadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
LoadingText.TextSize = 20
LoadingText.Font = Enum.Font.SourceSansBold
LoadingText.Size = UDim2.new(0.3, 0, 0.05, 0)
LoadingText.Position = UDim2.new(0.35, 0, -0.1, 0) -- Vị trí tương ứng với LoadingFrame
LoadingText.Text = "Loading: 0%"

-- Thời gian loading ngẫu nhiên (15-30 giây)
local loadingTime = math.random(15, 30)

-- Hiệu ứng kéo vào từ trên
local tweenService = game:GetService("TweenService")
local moveInTween = tweenService:Create(LoadingFrame, TweenInfo.new(0.5), {Position = UDim2.new(0.1, 0, 0.05, 0)})
local textMoveInTween = tweenService:Create(LoadingText, TweenInfo.new(0.5), {Position = UDim2.new(0.35, 0, 0.05, 0)})

moveInTween:Play()
textMoveInTween:Play()

-- Cập nhật % và thanh tiến trình
for i = 0, 100 do
    wait(loadingTime / 100) -- Chia thời gian cho từng % tiến độ
    LoadingBar.Size = UDim2.new(i / 100, 0, 1, 0) -- Tăng kích thước thanh
    LoadingText.Text = "Loading: " .. i .. "%" -- Cập nhật chữ
end

-- Hiệu ứng kéo ra khỏi màn hình
local moveOutTween = tweenService:Create(LoadingFrame, TweenInfo.new(0.5), {Position = UDim2.new(0.1, 0, -0.1, 0)})
local textMoveOutTween = tweenService:Create(LoadingText, TweenInfo.new(0.5), {Position = UDim2.new(0.35, 0, -0.1, 0)})

moveOutTween:Play()
textMoveOutTween:Play()

-- Xóa GUI sau khi ra khỏi màn hình
moveOutTween.Completed:Wait() -- Đợi hiệu ứng hoàn thành
ScreenGui:Destroy()

-- Tạo một biến flag để kiểm tra script có chạy chưa
if _G.ShaderApplied then
    print("Script đã chạy trước đó, không thể chạy lại.")
    return
end
_G.ShaderApplied = true -- Đánh dấu script đã chạy

-- Tăng cường hiệu ứng phản chiếu trên tất cả các đối tượng
local function enhanceReflectance()
    local objects = workspace:GetDescendants()
    local batchSize = 200  -- Số lượng đối tượng xử lý mỗi lần (giảm tải)
    local index = 1

    -- Chia nhỏ công việc để tránh quá tải CPU
    while index <= #objects do
        for i = index, math.min(index + batchSize - 1, #objects) do
            local obj = objects[i]
            if obj:IsA("BasePart") or obj:IsA("MeshPart") or obj:IsA("UnionOperation") then
                if obj.Reflectance < 0.2 then
                    obj.Reflectance = 0.2
                end
            end
        end
        index = index + batchSize
        task.wait()  -- Dừng lại mỗi khi xử lý một nhóm
    end
end

-- Tạo hiệu ứng Bloom (ánh sáng lan tỏa)
local function createBloomEffect()
    local bloom = game.Lighting:FindFirstChild("BloomEffect") or Instance.new("BloomEffect")
    bloom.Parent = game.Lighting
    bloom.Intensity = 3
    bloom.Threshold = 100
    bloom.Size = 1000
end

-- Tạo hiệu ứng Blur (mờ nhẹ môi trường)
local function createBlurEffect()
    local blur = game.Lighting:FindFirstChild("BlurEffect") or Instance.new("BlurEffect")
    blur.Parent = game.Lighting
    blur.Size = 2
end

-- Cập nhật hiệu ứng shader (tối ưu hóa bằng cách giảm xử lý liên tục)
local function updateEffects()
    -- Chỉ chạy cập nhật mỗi khi cần (dựa vào thay đổi trạng thái)
    task.spawn(function()
        while task.wait(0.2) do  -- Cập nhật hiệu ứng mỗi 0.2 giây
            enhanceReflectance()
        end
    end)
end

-- Dọn dẹp tất cả hiệu ứng khi không cần
local function cleanupShader()
    if environmentLightPart then
        environmentLightPart:Destroy()
        environmentLightPart = nil
    end
    if game.Lighting:FindFirstChild("BloomEffect") then
        game.Lighting.BloomEffect:Destroy()
    end
    if game.Lighting:FindFirstChild("BlurEffect") then
        game.Lighting.BlurEffect:Destroy()
    end
end

-- Chạy tất cả các hiệu ứng shader
local function applyShader()
    createBloomEffect()  -- Tạo hiệu ứng Bloom
    createBlurEffect()  -- Tạo hiệu ứng Blur
    updateEffects()  -- Cập nhật hiệu ứng shader
end

-- Áp dụng shader và xử lý nhân vật respawn
local function initializeShader()
    local player = game.Players.LocalPlayer
    if not player.Character then
        player.CharacterAdded:Wait() -- Chờ nhân vật xuất hiện
    end

    -- Áp dụng shader khi nhân vật xuất hiện
    player.CharacterAdded:Connect(function()
        task.wait(1) -- Chờ để đảm bảo tất cả tài nguyên đã tải
        cleanupShader() -- Dọn dẹp shader cũ
        applyShader() -- Áp dụng lại shader
    end)
end

-- Khởi chạy script
initializeShader()
applyShader()
print("Shader đã được áp dụng thành công!")
